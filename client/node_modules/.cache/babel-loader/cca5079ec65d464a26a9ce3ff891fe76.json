{"ast":null,"code":"const registerValidate = data => {\n  let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  let response = {};\n\n  if (!data.name) {\n    response.name = 'Please provide name.';\n  }\n\n  if (!data.email) {\n    response.email = 'Please provide email.';\n  } else if (reg.test(data.email) === false) {\n    response.email = 'Please provide a valid email.';\n  }\n\n  if (!data.contact) {\n    response.contact = 'Please provide contact number.';\n  } else if (data.contact.length > 11) {\n    response.contact = 'Please provide valid contact number.';\n  }\n\n  if (!data.password) {\n    response.password = 'Please provide password.';\n  } else if (!data.confirmPassword) {\n    response.confirmPassword = 'Please provide confirm password.';\n  } else if (data.password !== data.confirmPassword) {\n    response.confirmPassword = 'Confirm password doesn\\'t match.';\n  } else if (data.password.length < 6) {\n    response.password = 'Password minimum 6 characters.';\n  }\n\n  return response;\n};\n\nexport default registerValidate;","map":{"version":3,"sources":["/home/naim/Desktop/test/client/src/components/validators/registerValidate.js"],"names":["registerValidate","data","reg","response","name","email","test","contact","length","password","confirmPassword"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,IAAI,IAAI;AAC7B,MAAIC,GAAG,GAAG,+CAAV;AAEA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAI,CAACF,IAAI,CAACG,IAAV,EAAgB;AACZD,IAAAA,QAAQ,CAACC,IAAT,GAAgB,sBAAhB;AACH;;AACD,MAAI,CAACH,IAAI,CAACI,KAAV,EAAiB;AACbF,IAAAA,QAAQ,CAACE,KAAT,GAAiB,uBAAjB;AACH,GAFD,MAEO,IAAIH,GAAG,CAACI,IAAJ,CAASL,IAAI,CAACI,KAAd,MAAyB,KAA7B,EAAoC;AACvCF,IAAAA,QAAQ,CAACE,KAAT,GAAiB,+BAAjB;AACH;;AACD,MAAI,CAACJ,IAAI,CAACM,OAAV,EAAmB;AACfJ,IAAAA,QAAQ,CAACI,OAAT,GAAmB,gCAAnB;AACH,GAFD,MAEO,IAAIN,IAAI,CAACM,OAAL,CAAaC,MAAb,GAAsB,EAA1B,EAA8B;AACjCL,IAAAA,QAAQ,CAACI,OAAT,GAAmB,sCAAnB;AACH;;AACD,MAAI,CAACN,IAAI,CAACQ,QAAV,EAAoB;AAChBN,IAAAA,QAAQ,CAACM,QAAT,GAAoB,0BAApB;AACH,GAFD,MAEO,IAAI,CAACR,IAAI,CAACS,eAAV,EAA2B;AAC9BP,IAAAA,QAAQ,CAACO,eAAT,GAA2B,kCAA3B;AACH,GAFM,MAEA,IAAIT,IAAI,CAACQ,QAAL,KAAkBR,IAAI,CAACS,eAA3B,EAA4C;AAC/CP,IAAAA,QAAQ,CAACO,eAAT,GAA2B,kCAA3B;AACH,GAFM,MAEA,IAAIT,IAAI,CAACQ,QAAL,CAAcD,MAAd,GAAuB,CAA3B,EAA8B;AACjCL,IAAAA,QAAQ,CAACM,QAAT,GAAoB,gCAApB;AACH;;AACD,SAAON,QAAP;AACH,CA3BD;;AA4BA,eAAeH,gBAAf","sourcesContent":["const registerValidate = data => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    let response = {}\n    if (!data.name) {\n        response.name = 'Please provide name.'\n    }\n    if (!data.email) {\n        response.email = 'Please provide email.'\n    } else if (reg.test(data.email) === false) {\n        response.email = 'Please provide a valid email.'\n    }\n    if (!data.contact) {\n        response.contact = 'Please provide contact number.'\n    } else if (data.contact.length > 11) {\n        response.contact = 'Please provide valid contact number.'\n    }\n    if (!data.password) {\n        response.password = 'Please provide password.'\n    } else if (!data.confirmPassword) {\n        response.confirmPassword = 'Please provide confirm password.'\n    } else if (data.password !== data.confirmPassword) {\n        response.confirmPassword = 'Confirm password doesn\\'t match.'\n    } else if (data.password.length < 6) {\n        response.password = 'Password minimum 6 characters.'\n    }\n    return response\n}\nexport default registerValidate"]},"metadata":{},"sourceType":"module"}