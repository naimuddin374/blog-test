{"ast":null,"code":"var _jsxFileName = \"/home/naim/Desktop/test/client/src/components/auth/Register.js\";\nimport React, { Component, Fragment } from 'react';\nimport { register } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport registerValidate from '../validators/registerValidate';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      let {\n        validation\n      } = this.state;\n      delete validation[event.target.name];\n      this.setState({\n        [event.target.name]: event.target.value,\n        validation\n      });\n    };\n\n    this.submitHandler = async event => {\n      event.preventDefault();\n      let validate = registerValidate(this.state);\n\n      if (Object.keys(validate).length !== 0) {\n        this.setState({\n          validation: validate,\n          isError: true\n        });\n        return false;\n      }\n\n      this.setState({\n        isWait: true\n      });\n      let {\n        register,\n        history\n      } = this.props;\n      let response = await register(this.state);\n      if (response) history.push('/');\n      this.setState({\n        isWait: false\n      });\n    };\n\n    this.state = {\n      name: '',\n      contact: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isWait: false,\n      isError: false,\n      validation: P\n    };\n  }\n\n  render() {\n    let {\n      name,\n      contact,\n      email,\n      password,\n      confirmPassword,\n      isWait\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section-padding-top pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-form-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 offset-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }, \"Full Name *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.changeHandler,\n      placeholder: \"Enter Full Name\",\n      className: isError && validation.name && 'is-invalid',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }\n    }), isError && validation.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 76\n      }\n    }, validation.name)), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, \"Contact Number *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"contact\",\n      value: contact,\n      onChange: this.changeHandler,\n      placeholder: \"Enter Contact Number\",\n      className: isError && validation.contact && 'is-invalid',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }), isError && validation.contact && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 79\n      }\n    }, validation.contact)), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }, \"Email address *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.changeHandler,\n      autoComplete: \"false\",\n      placeholder: \"Enter Email\",\n      className: isError && validation.email && 'is-invalid',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }\n    }), isError && validation.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 77\n      }\n    }, validation.email)), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }, \"Password *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.changeHandler,\n      placeholder: \"Enter Password\",\n      className: isError && validation.password && 'is-invalid',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }), isError && validation.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 80\n      }\n    }, validation.password)), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }, \"Confirm Password *\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.changeHandler,\n      className: \"form-control\",\n      placeholder: \"Enter Confirm Password\",\n      className: isError && validation.confirmPassword && 'is-invalid',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }), isError && validation.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 87\n      }\n    }, validation.confirmPassword)), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"dark\",\n      size: \"lg\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, isWait ? `Please Wait...` : `Submit`)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, \"Already have account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 67\n      }\n    }, \"Login here...\")))))))));\n  }\n\n}\n\nexport default connect(null, {\n  register\n})(Register);","map":{"version":3,"sources":["/home/naim/Desktop/test/client/src/components/auth/Register.js"],"names":["React","Component","Fragment","register","connect","Link","Button","Form","registerValidate","Register","constructor","props","changeHandler","event","validation","state","target","name","setState","value","submitHandler","preventDefault","validate","Object","keys","length","isError","isWait","history","response","push","contact","email","password","confirmPassword","P","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { register } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport registerValidate from '../validators/registerValidate';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            contact: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            isWait: false,\n            isError: false,\n            validation: P\n        }\n    }\n    changeHandler = event => {\n        let { validation } = this.state\n\n        delete validation[event.target.name]\n        this.setState({\n            [event.target.name]: event.target.value,\n            validation\n        })\n    }\n    submitHandler = async event => {\n        event.preventDefault()\n        let validate = registerValidate(this.state)\n        if (Object.keys(validate).length !== 0) {\n            this.setState({ validation: validate, isError: true })\n            return false\n        }\n\n        this.setState({ isWait: true })\n        let { register, history } = this.props\n        let response = await register(this.state)\n        if (response) history.push('/')\n        this.setState({ isWait: false })\n    }\n    render() {\n        let { name, contact, email, password, confirmPassword, isWait } = this.state\n\n        return (\n            <Fragment>\n                <section className=\"section-padding-top pb-2\">\n                    <div className=\"container\">\n                        <div className=\"input-form-area\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 col-md-12 offset-3\">\n                                    <Form onSubmit={this.submitHandler}>\n\n                                        <Form.Group>\n                                            <Form.Label>Full Name *</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"name\"\n                                                value={name}\n                                                onChange={this.changeHandler}\n                                                placeholder=\"Enter Full Name\"\n                                                className={isError && validation.name && 'is-invalid'}\n                                            />\n                                            {isError && validation.name && <div className=\"invalid-feedback\">{validation.name}</div>}\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label>Contact Number *</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                name=\"contact\"\n                                                value={contact}\n                                                onChange={this.changeHandler}\n                                                placeholder=\"Enter Contact Number\"\n                                                className={isError && validation.contact && 'is-invalid'}\n                                            />\n                                            {isError && validation.contact && <div className=\"invalid-feedback\">{validation.contact}</div>}\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label>Email address *</Form.Label>\n                                            <Form.Control\n                                                type=\"email\"\n                                                name=\"email\"\n                                                value={email}\n                                                onChange={this.changeHandler}\n                                                autoComplete=\"false\"\n                                                placeholder=\"Enter Email\"\n                                                className={isError && validation.email && 'is-invalid'}\n                                            />\n                                            {isError && validation.email && <div className=\"invalid-feedback\">{validation.email}</div>}\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label>Password *</Form.Label>\n                                            <Form.Control\n                                                type=\"password\"\n                                                name=\"password\"\n                                                value={password}\n                                                onChange={this.changeHandler}\n                                                placeholder=\"Enter Password\"\n                                                className={isError && validation.password && 'is-invalid'}\n                                            />\n                                            {isError && validation.password && <div className=\"invalid-feedback\">{validation.password}</div>}\n                                        </Form.Group>\n\n                                        <Form.Group>\n                                            <Form.Label>Confirm Password *</Form.Label>\n                                            <Form.Control\n                                                type=\"password\"\n                                                name=\"confirmPassword\"\n                                                value={confirmPassword}\n                                                onChange={this.changeHandler}\n                                                className=\"form-control\"\n                                                placeholder=\"Enter Confirm Password\"\n                                                className={isError && validation.confirmPassword && 'is-invalid'}\n                                            />\n                                            {isError && validation.confirmPassword && <div className=\"invalid-feedback\">{validation.confirmPassword}</div>}\n                                        </Form.Group>\n\n\n                                        <Button type=\"submit\" variant=\"dark\" size=\"lg\" block>\n                                            {isWait ? `Please Wait...` : `Submit`}\n                                        </Button>\n                                    </Form>\n\n                                    <p className=\"mt-3\">\n                                        <span className=\"float-left\">\n                                            Already have account? <Link to='/login'>Login here...</Link>\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Fragment>\n        )\n    }\n}\nexport default connect(null, { register })(Register)"]},"metadata":{},"sourceType":"module"}