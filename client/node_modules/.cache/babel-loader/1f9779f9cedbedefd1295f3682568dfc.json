{"ast":null,"code":"import * as Types from './types';\nimport Axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken'; // Registration \n\nexport const register = data => async dispatch => {\n  return Axios.post(`/api/auth/register`, data).then(res => {\n    dispatch({\n      type: Types.SET_MESSAGE,\n      payload: {\n        message: res.data.message,\n        type: 'success'\n      }\n    });\n    return true;\n  }).catch(err => {\n    dispatch({\n      type: Types.SET_MESSAGE,\n      payload: {\n        message: err.response && err.response.data.message,\n        type: 'error'\n      }\n    });\n    return false;\n  });\n}; // Login\n\nexport const login = data => async dispatch => {\n  return Axios.post(`/api/auth/login`, data).then(res => {\n    let token = res.data.data;\n\n    if (token) {\n      localStorage.setItem('auth_token', token);\n      setAuthToken(token);\n    }\n\n    dispatch({\n      type: Types.SET_USER,\n      payload: token\n    });\n    dispatch({\n      type: Types.SET_MESSAGE,\n      payload: {\n        message: res.data.message,\n        type: 'success'\n      }\n    });\n    return true;\n  }).catch(err => {\n    dispatch({\n      type: Types.SET_MESSAGE,\n      payload: {\n        message: err.response && err.response.data.message,\n        type: 'error'\n      }\n    });\n    return false;\n  });\n}; // Logout\n\nexport const logout = history => dispatch => {\n  localStorage.removeItem('auth_token');\n  history.push(`/`);\n  window.location.reload();\n  dispatch({\n    type: Types.SET_USER,\n    payload: {\n      token: {},\n      user: {}\n    }\n  });\n  dispatch({\n    type: Types.SET_MESSAGE,\n    payload: {\n      message: 'Logout Successful',\n      type: 'success'\n    }\n  });\n};","map":{"version":3,"sources":["/home/naim/Desktop/test/client/src/store/actions/authActions.js"],"names":["Types","Axios","setAuthToken","register","data","dispatch","post","then","res","type","SET_MESSAGE","payload","message","catch","err","response","login","token","localStorage","setItem","SET_USER","logout","history","removeItem","push","window","location","reload","user"],"mappings":"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","sourcesContent":["import * as Types from './types'\nimport Axios from 'axios'\nimport setAuthToken from '../../utils/setAuthToken'\n\n\n// Registration \nexport const register = data => async dispatch => {\n    return Axios.post(`/api/auth/register`, data)\n        .then(res => {\n            dispatch({\n                type: Types.SET_MESSAGE,\n                payload: {\n                    message: res.data.message,\n                    type: 'success',\n                }\n            })\n            return true\n        })\n        .catch(err => {\n            dispatch({\n                type: Types.SET_MESSAGE,\n                payload: {\n                    message: err.response && err.response.data.message,\n                    type: 'error',\n                }\n            })\n            return false\n        })\n}\n\n// Login\nexport const login = data => async dispatch => {\n    return Axios.post(`/api/auth/login`, data)\n        .then(res => {\n            let token = res.data.data;\n            if (token) {\n                localStorage.setItem('auth_token', token)\n                setAuthToken(token)\n            }\n            dispatch({\n                type: Types.SET_USER,\n                payload: token\n            })\n            dispatch({\n                type: Types.SET_MESSAGE,\n                payload: {\n                    message: res.data.message,\n                    type: 'success',\n                }\n            })\n            return true\n        })\n        .catch(err => {\n            dispatch({\n                type: Types.SET_MESSAGE,\n                payload: {\n                    message: err.response && err.response.data.message,\n                    type: 'error',\n                }\n            })\n            return false\n        })\n}\n\n// Logout\nexport const logout = history => dispatch => {\n    localStorage.removeItem('auth_token')\n    history.push(`/`)\n    window.location.reload();\n    dispatch({\n        type: Types.SET_USER,\n        payload: {\n            token: {},\n            user: {}\n        }\n    })\n    dispatch({\n        type: Types.SET_MESSAGE,\n        payload: {\n            message: 'Logout Successful',\n            type: 'success',\n        }\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}